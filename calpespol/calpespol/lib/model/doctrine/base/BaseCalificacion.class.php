<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Calificacion', 'doctrine');

/**
 * BaseCalificacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id_estudiante
 * @property integer $id_item
 * @property string $id_usuario
 * @property float $valor
 * @property TIMESTAMP $fecha
 * @property Usuario $Usuario
 * @property Item $Item
 * 
 * @method string       getIdEstudiante()  Returns the current record's "id_estudiante" value
 * @method integer      getIdItem()        Returns the current record's "id_item" value
 * @method string       getIdUsuario()     Returns the current record's "id_usuario" value
 * @method float        getValor()         Returns the current record's "valor" value
 * @method TIMESTAMP    getFecha()         Returns the current record's "fecha" value
 * @method Usuario      getUsuario()       Returns the current record's "Usuario" value
 * @method Item         getItem()          Returns the current record's "Item" value
 * @method Calificacion setIdEstudiante()  Sets the current record's "id_estudiante" value
 * @method Calificacion setIdItem()        Sets the current record's "id_item" value
 * @method Calificacion setIdUsuario()     Sets the current record's "id_usuario" value
 * @method Calificacion setValor()         Sets the current record's "valor" value
 * @method Calificacion setFecha()         Sets the current record's "fecha" value
 * @method Calificacion setUsuario()       Sets the current record's "Usuario" value
 * @method Calificacion setItem()          Sets the current record's "Item" value
 * 
 * @package    CALPESPOL
 * @subpackage model
 * @author     ABEJJA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCalificacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('calificacion');
        $this->hasColumn('id_estudiante', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('id_item', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_usuario', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('valor', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fecha', 'TIMESTAMP', null, array(
             'type' => 'TIMESTAMP',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'id_usuario',
             'foreign' => 'id'));

        $this->hasOne('Item', array(
             'local' => 'id_item',
             'foreign' => 'id'));
    }
}