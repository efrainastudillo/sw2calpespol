<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Estudianteliteral', 'doctrine');

/**
 * BaseEstudianteliteral
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_estudiante
 * @property integer $idliteral
 * @property integer $nota_literal
 * @property string $id_calificador
 * @property timestamp $fecha
 * @property string $comentario
 * @property Literal $Literal
 * @property UsuarioCurso $UsuarioCurso
 * 
 * @method integer           getIdEstudiante()   Returns the current record's "id_estudiante" value
 * @method integer           getIdliteral()      Returns the current record's "idliteral" value
 * @method integer           getNotaLiteral()    Returns the current record's "nota_literal" value
 * @method string            getIdCalificador()  Returns the current record's "id_calificador" value
 * @method timestamp         getFecha()          Returns the current record's "fecha" value
 * @method string            getComentario()     Returns the current record's "comentario" value
 * @method Literal           getLiteral()        Returns the current record's "Literal" value
 * @method UsuarioCurso      getUsuarioCurso()   Returns the current record's "UsuarioCurso" value
 * @method Estudianteliteral setIdEstudiante()   Sets the current record's "id_estudiante" value
 * @method Estudianteliteral setIdliteral()      Sets the current record's "idliteral" value
 * @method Estudianteliteral setNotaLiteral()    Sets the current record's "nota_literal" value
 * @method Estudianteliteral setIdCalificador()  Sets the current record's "id_calificador" value
 * @method Estudianteliteral setFecha()          Sets the current record's "fecha" value
 * @method Estudianteliteral setComentario()     Sets the current record's "comentario" value
 * @method Estudianteliteral setLiteral()        Sets the current record's "Literal" value
 * @method Estudianteliteral setUsuarioCurso()   Sets the current record's "UsuarioCurso" value
 * 
 * @package    CALPESPOL
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEstudianteliteral extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('estudianteliteral');
        $this->hasColumn('id_estudiante', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idliteral', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nota_literal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'default' => '0',
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_calificador', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('fecha', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('comentario', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Literal', array(
             'local' => 'idliteral',
             'foreign' => 'idliteral',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UsuarioCurso', array(
             'local' => 'id_estudiante',
             'foreign' => 'id_usuario'));
    }
}