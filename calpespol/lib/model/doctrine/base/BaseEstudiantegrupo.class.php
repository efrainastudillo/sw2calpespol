<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Estudiantegrupo', 'doctrine');

/**
 * BaseEstudiantegrupo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idgrupo
 * @property integer $id_estudiante
 * @property Grupo $Grupo
 * @property UsuarioCurso $UsuarioCurso
 * 
 * @method integer         getIdgrupo()       Returns the current record's "idgrupo" value
 * @method integer         getIdEstudiante()  Returns the current record's "id_estudiante" value
 * @method Grupo           getGrupo()         Returns the current record's "Grupo" value
 * @method UsuarioCurso    getUsuarioCurso()  Returns the current record's "UsuarioCurso" value
 * @method Estudiantegrupo setIdgrupo()       Sets the current record's "idgrupo" value
 * @method Estudiantegrupo setIdEstudiante()  Sets the current record's "id_estudiante" value
 * @method Estudiantegrupo setGrupo()         Sets the current record's "Grupo" value
 * @method Estudiantegrupo setUsuarioCurso()  Sets the current record's "UsuarioCurso" value
 * 
 * @package    CALPESPOL
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEstudiantegrupo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('estudiantegrupo');
        $this->hasColumn('idgrupo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_estudiante', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Grupo', array(
             'local' => 'idgrupo',
             'foreign' => 'idgrupo',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UsuarioCurso', array(
             'local' => 'id_estudiante',
             'foreign' => 'id_usuario_curso'));
    }
}