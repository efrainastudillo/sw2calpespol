<?php

/**
 * Usuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    CALPESPOL
 * @subpackage model
 * @author     Efrain Astudillo
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Usuario extends BaseUsuario
{
    /**
     * Pregunta si el usuario existe en la base de datos dada la matricula
     * @param type $matricula
     * @return type Boolean  True si existe y si no False
     */
    public static function existeUsuario($matricula){
        $user=Doctrine_Query::create()
        ->select("*")
        ->from('Usuario u')
        ->where("u.matricula=?",$matricula)
        ->orWhere("u.usuario_espol=?",$matricula)
        ->orWhere("u.cedula=?",$matricula)
        ->execute();
        
        if($user->count()==0){
            return false;
        }else{
            return true;
        }
    }
    /**
     *  Obtiene el Usuario por la matricula
     * @param type $matricula
     * @return type Usuario
     */
    public static function getUsuarioByMatricula($matricula){
        $user = Doctrine_Query::create()
        ->select("*")
        ->from('Usuario u')
        ->where("u.matricula=?",$matricula)
        ->fetchOne();
        return $user;
    }
    /**
     *  Obtiene el Usuario por la cedula
     * @param String cedula
     * @return Usuario 
     */
    public static function getUsuarioByCedula($cedula){
        $user = Doctrine_Query::create()
        ->select("*")
        ->from('Usuario u')
        ->where("u.cedula=?",$cedula)
        ->fetchOne();
        return $user;
    }
    /**
     * Obtengo los Estudiantes del Curso
     * @param String $paralelo
     * @param String $materia
     * @return Usuario 
     */
    public static function getEstudiantesByParaleloAndMateria($paralelo,$materia){
        $q=Doctrine_Query::create()
            ->from('Usuario u')
            ->innerJoin('u.UsuarioCurso uc on uc.id_usuario=u.idUsuario')
            ->innerJoin('uc.Curso c on uc.id_curso=c.idCurso')
            ->innerJoin('c.Materia m on c.id_materia=m.idMateria')
            ->innerJoin('uc.Rolusuario ru on uc.id_rol=ru.idrolusuario')
            ->where('m.nombre=?',$materia)
            ->andWhere('c.anio=?', Utility::getAnio())
            ->andWhere('c.termino=?', Utility::getTermino())
            ->andWhere('c.paralelo=?',$paralelo)
            ->andWhere('ru.nombre=?', 'Estudiante')
            ->execute();
        return $q;
    }
    
    
    public static function getAyudantesCurso($paralelo,$materia){
         $q=Doctrine_Query::create()
            ->from('Usuario u')
            ->innerJoin('u.UsuarioCurso uc on uc.id_usuario=u.idUsuario')
            ->innerJoin('uc.Curso c on uc.id_curso=c.idCurso')
            ->innerJoin('c.Materia m on c.id_materia=m.idMateria')
            ->innerJoin('uc.Rolusuario ru on uc.id_rol=ru.idrolusuario')
            ->where('m.nombre=?',$materia)
            ->andWhere('c.anio=?', Utility::getAnio())
            ->andWhere('c.termino=?', Utility::getTermino())
            ->andWhere('c.paralelo=?',$paralelo)
            ->andWhere('ru.nombre=?', 'Ayudante')
            ->execute();
        return $q;
    }
}